# Generated by Django 4.1 on 2022-08-13 12:26

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brantitem', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='catagory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catagoryname', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(blank=True, max_length=255)),
                ('color_code', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('contact', models.IntegerField()),
                ('address1', models.CharField(max_length=150)),
                ('address2', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=150)),
                ('zip_code', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=150)),
                ('nearest_location', models.CharField(max_length=150)),
                ('note', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='giftcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardname', models.CharField(max_length=150)),
                ('cardimage', models.ImageField(upload_to='giftcard')),
                ('cardamount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pro_name', models.CharField(max_length=200)),
                ('Pro_desc', models.CharField(max_length=50)),
                ('rate_product', models.IntegerField()),
                ('pro_collection', models.CharField(blank=True, choices=[('Featured', 'Featured'), ('On sale', 'On sale'), ('Top selling', 'Top selling')], max_length=100)),
                ('price', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('main_image', models.ImageField(upload_to='product_main_image')),
                ('offer_start', models.DateTimeField(auto_now=True, null=True)),
                ('offer_end', models.DateTimeField(auto_now=True, null=True)),
                ('color', models.ManyToManyField(blank=True, to='userapp.color')),
                ('pro_brnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.brand')),
                ('pro_catagory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.catagory')),
            ],
        ),
        migrations.CreateModel(
            name='Product_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Variants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('image_id', models.IntegerField(blank=True, default=0, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='varients', to='userapp.product')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.size')),
            ],
        ),
        migrations.CreateModel(
            name='slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('desc', models.CharField(blank=True, max_length=500)),
                ('image', models.ImageField(upload_to='slider/')),
                ('offerd_price', models.IntegerField()),
                ('original_price', models.IntegerField()),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('seo_title', models.CharField(max_length=150)),
                ('seo_description', models.CharField(max_length=150)),
                ('meta_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.metadata')),
                ('productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proimg', models.ImageField(upload_to='product_image/')),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='userapp.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ManyToManyField(blank=True, to='userapp.product_type'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='userapp.tags'),
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_created=True)),
                ('payment', models.CharField(choices=[('PAID', 'PAID'), ('UNPAID', 'UNPAID')], max_length=100, null=True)),
                ('total_amount', models.IntegerField()),
                ('delivart_status', models.CharField(choices=[('NEW', 'NEW'), ('APPROVED', 'APPROVED'), ('CANCLE', 'CANCLE'), ('DISPATCHED', 'DISPATCHED'), ('RECIVED', 'RECIVED')], max_length=100, null=True)),
                ('order_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.customers')),
                ('order_product', models.ManyToManyField(to='userapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(to='userapp.product')),
            ],
        ),
    ]
